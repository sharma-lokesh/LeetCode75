class Solution {
    public int compress(char[] chars) {
        
        
        int result=0;
        int start=0;
        while(start < chars.length){
            int end = start;
            while(end < chars.length && chars[start] == chars[end]){
                end++;
            }
            int count = end - start;;
            chars[result] = chars[start];
            result++;
            if(count > 1){
                char[] freq = Integer.toString(count).toCharArray();
                for(char f : freq){
                    chars[result] = f;
                    result++;;
                }
            }
            start = end;;
        }
        return result;
        
        
        /*HashMap<Character, Integer> map = new HashMap<>();

        for(char c : chars){
            map.put(c, map.getOrDefault(c, 0)+1);
        }
        StringBuilder str = new StringBuilder();
        int x=0;
        for(Map.Entry<Character, Integer> entry : map.entrySet()) {
            if(entry.getValue()>1){
                str.append(entry.getKey());
                str.append(entry.getValue());
                chars[x] = entry.getKey();
                chars[x+1] = (char) (entry.getValue() + 48);
                x=x+2;
            }else{
                str.append(entry.getKey());
                chars[x] = entry.getKey();
                x++;
            }
        }
        System.out.println(str);
        return str.length();*/
    }
}
